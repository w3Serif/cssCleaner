var  fs 				  		= require('fs')
	, common_lib			= require('./lib/commonLib')
	, ClassCollector 		= require('./lib/classCollector')
	, Cursor			  		= require('./lib/cursor')
	, settings				= require('./settings');


var INI = (function(){
	function INI(params){
		this.settings =  params || ((typeof settings === 'object') ? settings : this.warning());
		this.content  = {};

		if (params) {
			this.loader();
		}
	}
	INI.prototype = {
		constructor: INI
		, warning: function(){
			new Error('INI: Settings Object is not defined!');
		}
		, write: function(obj, dest){
			var str = '', curObj = obj;
			for (var i in curObj){
				str += i + '{'+ ((typeof curObj[i]==='object') ? this.toString(curObj[i]) : curObj[i]) +'}';
			}
//			if (obj) return str;
			common_lib.writeFile(dest, str);
		}
		, loader: function(){
			for (var i in this.settings){

				// Collect css classes from html files
				this.content[i] = new ClassCollector({
					'settings': this.settings[i],
					'instance':i}
				).htmlClassListArr;

				// convert this StringClasses from css file to Object, and compare with ClassCollector str.
				this.content[i+'_css'] = new Cursor({
					'file':			  common_lib.readFile(this.settings[i].css),
					'curCssFormHtml': this.content[i],
					'targetWrite':	  this.settings[i].output});

				// write to files result
				this.write(this.content[i+'_css'], this.settings[i].output);
			}
		}

	};
	return new INI();
})();


if (module.parent) {
	module.exports = INI;
} else {
	INI.loader();
}

